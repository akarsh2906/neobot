<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="neobot">

    <!-- ........................... SENSOR PLUGIN ................................... -->

    <gazebo>
        <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>

        <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
        </plugin>
    </gazebo>


    <xacro:if value="$(arg use_ros2_control)">
        <gazebo>
            <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
                <parameters>/home/akarsh/neobot_ws/src/neobot/config/diff_controller.yaml</parameters>
            </plugin>
        </gazebo>
    </xacro:if>
    

        <!-- ........................... DIFFERENTIAL DRIVE PLUGIN     &     JOINT STATE PUBLISHER PLUGIN................................... -->

    <xacro:unless value="$(arg use_ros2_control)">
        <gazebo>

            <plugin filename="gz-sim-diff-drive-system"
                name="gz::sim::systems::DiffDrive">
                <left_joint>left_wheel_joint</left_joint>
                <right_joint>right_wheel_joint</right_joint>
                <wheel_separation>0.272</wheel_separation>  
                <wheel_radius>0.05</wheel_radius>
                <odom_publish_frequency>30</odom_publish_frequency>
                <min_linear_velocity>-0.314</min_linear_velocity>
                <max_linear_velocity>0.314</max_linear_velocity>
                <min_angular_velocity>-0.4</min_angular_velocity>
                <max_angular_velocity>0.4</max_angular_velocity>

                <max_linear_acceleration>1.5</max_linear_acceleration>
                <min_linear_acceleration>-1.5</min_linear_acceleration>
                <max_angular_acceleration>1.5</max_angular_acceleration>
                <min_angular_acceleration>-1.5</min_angular_acceleration>
                <topic>/cmd_vel</topic>
                <odom_topic>odom_encoders</odom_topic>
                <tf_topic>tf_enc</tf_topic>
                <frame_id>odom</frame_id>
                <child_frame_id>base_footprint</child_frame_id>
                <xacro:if value="${odometry_source == 'world'}">
                    <odometry_source>1</odometry_source>
                </xacro:if>
                <xacro:if value="${odometry_source == 'encoder'}">
                    <odometry_source>0</odometry_source>
                </xacro:if>
            </plugin>


            <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
                <joint_name>left_wheel_joint</joint_name>
                <joint_name>right_wheel_joint</joint_name>
                <topic>/joint_states</topic>
            </plugin>

        </gazebo>
    </xacro:unless>

    <!-- ............................. ground truth .................................... -->

    <xacro:if value="$(arg publish_ground_truth)">
        <gazebo>
            <plugin filename="libgz-sim-odometry-publisher-system"
                name="gz::sim::systems::OdometryPublisher">
                <odom_frame>odom</odom_frame>
                <robot_base_frame>base_footprint</robot_base_frame>
                <odom_topic>ground_truth</odom_topic>
                <tf_topic>tf_true</tf_topic>
                <dimensions>2</dimensions>
                <frame_id>odom</frame_id>
                <child_frame_id>base_footprint</child_frame_id>
                <odom_publish_frequency>10</odom_publish_frequency>
            </plugin>
        </gazebo>
    </xacro:if>



    <!-- ........................... IMU config ................................... -->

    <xacro:if value="$(arg use_imu)">
        <gazebo reference="imu_link">
            <sensor name="imu_sensor" type="imu">
                <always_on>1</always_on>
                <update_rate>1</update_rate>
                <gz_frame_id>imu</gz_frame_id>
                <visualize>true</visualize>
                <topic>imu</topic>
            </sensor>
        </gazebo>
    </xacro:if>



    <!-- ........................... 2D LIDAR config ................................... -->

    <xacro:if value="$(arg use_lidar)">
        <gazebo reference="lidar_link">
            <sensor name='gpu_lidar' type='gpu_lidar'>
                <topic>scan</topic>
                <gz_frame_id>lidar_link</gz_frame_id>
                <update_rate>10</update_rate>
                <lidar>
                    <scan>
                        <horizontal>
                            <samples>180</samples>
                            <resolution>1</resolution>
                            <min_angle>-1.57</min_angle>
                            <max_angle>1.57</max_angle>
                        </horizontal>
                        <vertical>
                            <samples>1</samples>
                            <resolution>0.01</resolution>
                            <min_angle>0</min_angle>
                            <max_angle>0</max_angle>
                        </vertical>
                    </scan>
                    <range>
                        <min>0.08</min>
                        <max>8.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.001</stddev>
                    </noise>
                </lidar>
                <always_on>1</always_on>
                <visualize>true</visualize>
            </sensor>
        </gazebo>
    </xacro:if>


    <!-- ........................... CAMERA config ................................... -->

    <xacro:if value="$(arg use_camera)">
        <gazebo reference="camera_link">
            <sensor name="depth_camera" type="rgbd_camera">
                <update_rate>30</update_rate>
                <topic>depth_camera</topic>
                <gz_frame_id>camera_link</gz_frame_id>
                <camera name="depth_camera">
                
                <horizontal_fov>1.0472</horizontal_fov>

                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.01</near>
                    <far>100</far>
                </clip>
                <depth_camera>
                    <clip>
                    <near>0.1</near>
                    <far>10</far>
                    </clip>
                </depth_camera>
                <noise>
                    <type>gaussian</type>
                    <mean>0</mean>
                    <stddev>0.007</stddev>
                </noise>
                </camera>
            </sensor>
        </gazebo>
    </xacro:if>

</robot>